#include "Game.h"
#include "Unit.h"
#include <windows.h>
#include <time.h>
#include "Formation.h"
#include "Control.h"


Game::Game()
{
    //ctor


    int nOfUnitsP1 = 2;
    int nOfUnitsP2 = 2;

    Unit P1[nOfUnitsP1];
    Unit P2[nOfUnitsP2];

    Control K;
    int iter = 0;

    while(1==1)
    {

            for(int i =0; i<2; i++)
            {
             P1[i].moveU(iter);
             P1[i].sight(iter);
             P2[i].moveU(iter);
             P2[i].sight(iter);
            }


            if(K.DoIseeEnemy(P1[i],P2,nOfUnitsP2) == true)
            {
                P1[i].rot(P2[K.closestEnemy(P[i], P2, nOfUnitsP2)].position);
                std::cout<<"bang!"<<std::endl;
                P2[i].healthp=P2[i].healthp -10;
                if(P2[i].healthp<=0)
                {
                    for (int j = i; j < nOfUnitsP2; ++j)
                    P2[j] = P2[j + 1];
                }
            }
           if( P1[i].position[1]>P2[i].sightF.at(1)&&P2[i].position[1]<P1[i].sightF.at(2) )
            {
                P2[i].rot(P1[i].position);
                std::cout<<"bang!"<<std::endl;
                P2[i].healthp=P2[i].healthp -10;
                if(P2[0].healthp<=0 && P2[1].healthp<=0)
                {
                    std::cout<<"P1 Won!"<<std::endl;
                    break;
                }
            }
            Sleep(1000);

            iter++;
        }
    }

}

Game::~Game()
{
    //dtor
}
